version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:17.5
    container_name: memail-postgres
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-memail}
      POSTGRES_USER: ${DATABASE_USERNAME:-memail}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-memail}
    ports:
      - "${DATABASE_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USERNAME:-memail}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - memail-network
    restart: unless-stopped

  # Redis Cache and Session Store
  redis:
    image: redis:7-alpine
    container_name: memail-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - memail-network
    restart: unless-stopped

  # Apache James Mail Server
  james:
    image: apache/james:latest
    container_name: memail-james
    ports:
      - "143:143"   # IMAP
      - "993:993"   # IMAPS
      - "587:587"   # SMTP
      - "465:465"   # SMTPS
      - "8000:8000" # WebAdmin
    volumes:
      - james_data:/var/james
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - memail-network
    restart: unless-stopped

  # Memail Backend Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: memail-backend
    environment:
      # Database Configuration
      DATABASE_URL: jdbc:postgresql://postgres:5432/${DATABASE_NAME:-memail}
      DATABASE_USERNAME: ${DATABASE_USERNAME:-memail}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-memail}

      # Redis Configuration
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}

      # SMTP/IMAP Configuration
      SMTP_HOST: james
      SMTP_PORT: 587
      SMTP_USERNAME: ${SMTP_USERNAME:-admin@ashulabs.com}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-admin123}

      # JWT Configuration
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-900000}
      JWT_REFRESH_EXPIRATION: ${JWT_REFRESH_EXPIRATION:-2592000000}

      # Frontend URL
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:4545}

      # Spring Profile
      SPRING_PROFILES_ACTIVE: prod
    ports:
      - "${BACKEND_PORT:-8585}:8585"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      james:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8585/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - memail-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Prometheus for Metrics Collection (Optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: memail-prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    networks:
      - memail-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Grafana for Metrics Visualization (Optional)
  grafana:
    image: grafana/grafana:latest
    container_name: memail-grafana
    environment:
      GF_SECURITY_ADMIN_USER: ${GRAFANA_USER:-admin}
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "${GRAFANA_PORT:-3000}:3000"
    depends_on:
      - prometheus
    networks:
      - memail-network
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  james_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  memail-network:
    driver: bridge
